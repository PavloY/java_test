apply plugin: 'java'

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    agent
}

dependencies {
    implementation 'org.testng:testng:7.0.0'
    implementation 'org.seleniumhq.selenium:selenium-java:4.0.0-alpha-3'
    implementation 'org.hamcrest:java-hamcrest:2.0.0.0'
    implementation 'org.hamcrest:hamcrest:2.2'
    implementation 'com.beust:jcommander:1.78'
    implementation 'com.thoughtworks.xstream:xstream:1.4.11.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha5'
    implementation 'mysql:mysql-connector-java:8.0.18'
    implementation 'org.hibernate.orm:hibernate-core:6.0.0.Alpha4'
    agent "org.aspectj:aspectjweaver:1.9.5"
    testImplementation 'ru.yandex.qatools.allure:allure-testng-adaptor:1.5.4'

    agent 'org.aspectj:aspectjweaver:1.8.10'
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jre8:1.1.2-2'
    testCompile 'com.codeborne:selenide:4.4.3'
    testCompile 'org.testng:testng:6.10'
    testCompile 'io.qameta.allure:allure-testng:2.0-BETA6'
    testCompile 'io.github.bonigarcia:webdrivermanager:1.6.2'

    implementation 'org.robotframework:robotframework:3.1.2'
    implementation 'info.cukes:cucumber-java:1.2.6'
    implementation 'info.cukes:cucumber-testng:1.2.6'



    }

task testGroups(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-groups.xml'
    }
    if (project.hasProperty('browser')){
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('platform')){
        systemProperty 'platform', "${platform}"
    }
    if (project.hasProperty('target')){
        systemProperty 'target', "${target}"
    }
}

task testContacts(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-contacts.xml'
    }
    if (project.hasProperty('browser')){
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('platform')){
        systemProperty 'platform', "${platform}"
    }
    if (project.hasProperty('target')){
        systemProperty 'target', "${target}"
    }
}
task testBdd(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-bddgroups.xml'
    }
    if (project.hasProperty('browser')){
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('platform')){
        systemProperty 'platform', "${platform}"
    }
    if (project.hasProperty('target')){
        systemProperty 'target', "${target}"
    }
}

testGroups.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}
testContacts.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}
testBdd.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

test {
    useTestNG()
    scanForTestClasses = false
}
